<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.StaffDao">
    <!-- 先定义一个Interface，StaffMapper，然后Mapper文件的namespace指向的就是这个Interface， StaffInterface里定义的方法和StaffMapper.xml文件中的一样, 
        然后代码里直接使用接口 -->
    <resultMap id="BaseResultMap" type="entity.Staff">
        <id column="staff_id" property="staff_id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="part" property="part" jdbcType="VARCHAR" />
        <result column="roleName" property="roleName" jdbcType="VARCHAR" />
        <result column="salary" property="salary" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Base_Column_List">
        staff_id, name, part, roleName, salary
    </sql>

    <!--根据主键查询一条员工数据 -->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
        parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List" />
        from staff
        where staff_id = #{staff_id,jdbcType=INTEGER}
    </select>

    <!-- 根据分页数据start 和size查询数据 -->
    <select id="findByPage" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from staff
        <if test="start!=null and size!=null">
            limit #{start},#{size}
        </if>
    </select>

    <!--查询所有员工数据 -->
    <select id="selectStaffList" resultType="entity.Staff">
        select
        <include refid="Base_Column_List" />
        from staff
    </select>

    <!-- 查询员工记录总数 -->
    <select id="selectCount" resultType="int">
        select count(*) from staff
    </select>

    <!--根据主键删除一条员工数据 -->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from staff
        where staff_id = #{staff_id,jdbcType=INTEGER}
    </delete>

    <!--插入一条员工数据 -->
    <insert id="insertById" parameterType="entity.Staff">
        insert into staff values (#{staff_id},#{name},#{part},#{roleName},#{salary})
    </insert>

    <!--根据主键更新一条员工数据 -->
    <update id="updateByPrimaryKey" parameterType="entity.Staff">
        update staff
        set name = #{name,jdbcType=VARCHAR},
        part = #{part,jdbcType=VARCHAR},
        roleName = #{roleName,jdbcType=VARCHAR},
        salary = #{salary,jdbcType=INTEGER}
        where staff_id = #{staff_id,jdbcType=INTEGER}
    </update>
</mapper>